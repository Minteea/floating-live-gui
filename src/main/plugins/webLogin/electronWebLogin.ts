import { app, BrowserWindow, ipcMain } from "electron";
import { AppCommandMap, BasePlugin, FloatingLive } from "floating-live";
import path from "path";
// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const GUI_VITE_DEV_SERVER_URL: string;
declare const GUI_VITE_NAME: string;

declare module "floating-live" {
  interface AppCommandMap {
    "webLogin.require": (platform: string) => void;
  }
}

export default class ElectronWebLogin extends BasePlugin {
  static pluginName = "electronWebLogin";
  static role = "webLogin";

  win: BrowserWindow | null = null;
  init(ctx: FloatingLive) {
    ctx.registerCommand("webLogin.require", () => {
      app.whenReady().then(() => {
        this.createWindow();
      });
    });
  }
  createWindow() {
    if (this.win) return;
    const win = new BrowserWindow({
      height: 600,
      width: 800,
      webPreferences: {
        preload: path.join(__dirname, "preload.js"),
        webSecurity: false,
      },
    });
    win.loadURL("https://passport.bilibili.com/login");
    win.webContents.executeJavaScript(/*javascript*/ `
    const bar = document.createElement("div")
    bar.style.position = "fixed"
    bar.style.left = "20px"
    bar.style.bottom = "20px"
    document.body.appendChild(bar)
    const emitBtn = document.createElement("button")
    emitBtn.innerText = "更新登录状态"
    emitBtn.onclick = ()=>{window.ipcRenderer?.send("webLogin.emit")}
    bar.appendChild(emitBtn)
    `);
    ipcMain
    ipcMain.on("webLogin.emit", (e) => {
      win.webContents.session.cookies
        .get({ url: "https://www.bilibili.com" })
        .then((c) => c.map(({ name, value }) => `${name}=${value}`).join("; "))
        .then((c) => console.log(c));
    });
    win.on("close", () => {
      this.win = null;
    });
    this.win = win;
  }
}
